require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '11.0'


target 'CPFLMOBILE' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => false
  )

  pod 'Firebase', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  

  pod 'react-native-blob-util', :path => '../node_modules/react-native-blob-util'

  pod 'react-native-pdf', :path => '../node_modules/react-native-pdf'

  pod 'RNPDF', :path => '../node_modules/react-native-view-pdf'

  target 'CPFLMOBILETests' do
    inherit! :complete
    # Pods for testing
  end

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable the next line.
  # use_flipper!()
  # use_flipper!({ 'Flipper-Folly' => '2.3.0' })

  # post_install do |installer|
  #   react_native_post_install(installer)
  #   __apply_Xcode_12_5_M1_post_install_workaround(installer)
  # end
  use_flipper!()

  post_install do |installer|
    react_native_post_install(installer)

    # check if file system is case sensitive 
    # if so then create symbolic links
    # for every openssl framework with name in lowercase
    unless File.exist? "pods"
      system('cd Pods/Headers/Public; ln -s Protobuf protobuf')
      system('cd Pods/OpenSSL-Universal/Frameworks/OpenSSL.xcframework/ios-arm64_arm64e_armv7_armv7s; ln -sfh OpenSSL.framework openssl.framework')
      system('cd Pods/OpenSSL-Universal/Frameworks/OpenSSL.xcframework/ios-arm64_i386_x86_64-simulator; ln -sfh OpenSSL.framework openssl.framework')
      system('cd Pods/OpenSSL-Universal/Frameworks/OpenSSL.xcframework/ios-arm64_x86_64-maccatalyst; ln -sfh OpenSSL.framework openssl.framework')
      system('cd Pods/OpenSSL-Universal/Frameworks/OpenSSL.xcframework/macos-arm64_arm64e_x86_64; ln -sfh OpenSSL.framework openssl.framework') 
    end

    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end

end
